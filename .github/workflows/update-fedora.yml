name: Update Fedora Official Image
on:
  schedule:
    - cron: "0 8 * * 1"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-fedora:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set dynamic variables
        id: vars
        run: |
          echo "BRANCH_NAME=fedora_update_$(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "COMMIT_MESSAGE=Update Fedora $(date -u +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Install Goose CLI
        run: |
          mkdir -p /home/runner/.local/bin
          curl -fsSL https://github.com/block/goose/releases/download/stable/download_cli.sh \
          | CONFIGURE=false INSTALL_PATH=/home/runner/.local/bin bash
          echo "/home/runner/.local/bin" >> $GITHUB_PATH

      - name: Configure Goose
        env:
          GOOSE_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          mkdir -p ~/.config/goose
          cat <<EOF > ~/.config/goose/config.yaml
          GOOSE_PROVIDER: "openrouter"
          GOOSE_MODEL: "google/gemini-2.5-pro-preview"
          keyring: false
          EOF
      
      - name: Create instructions for Goose
        run: |
          cat <<EOF > instructions.txt
          1. Pull main Branch and create a new Branch
          2. Start by checking out to the master branch and pull the latest content
          3. Then create a new branch name fedora_update_yyyymmdd, where yyyymmdd is the current date
          4. Read the library/fedora file and get the GitRepo value
          5. For each branch in that GitRepo, using curl to query GitHub API get the latest commit hash
          6. Update the library/fedora file, if you find a branch that is not yet in that file, create a new Tag for it.
          EOF

      - name: Run Goose to update fedora file
        env:
          GOOSE_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          goose run --instructions instructions.txt | \
                  # Remove ANSI color codes
                  sed -E 's/\x1B\[[0-9;]*[mK]//g' | \
                  # Remove session/logging lines
                  grep -v "logging to /home/runner/.config/goose/sessions/" | \
                  grep -v "^starting session" | \
                  grep -v "^Closing session" | \
                  # Trim trailing whitespace
                  sed 's/[[:space:]]*$//' \
                  > pr_comment.txt
      
      - name: Create Branch and Commit Changes
        id: commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b ${{ steps.vars.outputs.BRANCH_NAME }}
          
          # Check if there are changes to commit
          if git diff --quiet library/fedora; then
            echo "No changes detected in library/fedora. Exiting."
            echo "NO_CHANGES=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          git add library/fedora
          git commit -m "${{ steps.vars.outputs.COMMIT_MESSAGE }}"
          git push -u origin ${{ steps.vars.outputs.BRANCH_NAME }}

      - name: Create Pull Request
        if: steps.commit.outputs.NO_CHANGES != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "${{ steps.vars.outputs.COMMIT_MESSAGE }}" \
            --body "This is an automated PR to update the Fedora Docker official image commit hashes. It automatically discovers new branches and updates existing ones." \
            --base master
